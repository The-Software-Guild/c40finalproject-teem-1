{"version":3,"sources":["components/navbar.js","components/drinktableV2.js","components/autocomplete.js","pages/all.js","pages/home.js","logo.svg","components/drinktable.js","components/myBarTable.js","pages/instructions.js","stores/UserStore.js","components/InputField.js","components/SubmitButton.js","components/LoginForm.js","components/AddUser.js","pages/mybar.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","handleSearchedElement","event","console","log","state","selectedCategory","elementSearched","handleSearch","target","value","setState","handleCategory","redirect","element","category","history","push","tmp","match","params","categories","className","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","this","onChange","disabled","map","index","name","placeholder","aria-describedby","onClick","Component","withRouter","DrinksTable","drinkData","data","columns","getColumns","rows","getRows","striped","bordered","hover","scrollX","responsive","fixed","entries","maxHeight","searching","label","field","sort","width","length","object","idDrink","strDrink","strCategory","strIBA","strAlcoholic","strGlass","detail","Button","variant","size","view","Autocomplete","suggestions","suggestedSelected","item","i","searchTerm","inputChange","renderSuggestions","React","allPage","loadDrinksFromURL","replace","searchCategory","allTerms","getDrinks","loadAllDrinks","fetch","then","json","drinks","getAllSearchTerms","terms","forEach","drink","concat","onTextChange","regex","RegExp","filter","v","test","search","changeCategory","currentTarget","prevState","includes","handleErrors","filteredDrinks","undefined","prevProps","location","pathname","Row","Col","md","span","offset","HomePage","componentDidMount","loading","resp","cocktail","catch","error","style","fontWeight","href","marginTop","src","strDrinkThumb","alt","DrinkRow","DrinkTable","Table","defaultProps","ableData","strAble","Instructions","loadCocktail","ingredients","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strIngredient6","strIngredient7","strIngredient8","strIngredient9","strIngredient10","strIngredient11","strIngredient12","strIngredient13","strIngredient14","strIngredient15","strInstructions","dateModified","extendObservable","isLoggedIn","username","canAdd","InputField","e","SubmitButton","text","LoginForm","password","buttonDisabled","property","val","trim","a","method","headers","body","JSON","stringify","res","result","success","UserStore","resetForm","alert","msg","setInputValue","doLogin","AddUser","cpassword","checkPassword","add","options","MyBar","showLogin","ableToMake","useringredients","ingredientList","selectFunction","newIngredients","toLowerCase","storeUserIngredients","loadDrinks","getIngredients","header","filtered","el","x","getIngredientsFromDB","uingredients","canMake","strName","getDrinksByIngredients","ingredient","class","doLogout","isNewUser","observer","App","exact","path","component","All","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bbedc93.chunk.js","sourcesContent":["import React, {Component} from \"react\"\r\nimport { Link } from 'react-router-dom'\r\nimport \"../styles/navbar.css\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass NavBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.tmp = this.props.match.params;\r\n        this.state = {\r\n            categories: [\r\n                {\r\n                    \"category\": \"s\",\r\n                    \"name\": \"Drink Name\"\r\n                },\r\n                {\r\n                    \"category\": \"c\",\r\n                    \"name\": \"Drink Category\"\r\n                },\r\n                {\r\n                    \"category\": \"a\",\r\n                    \"name\": \"Contains Alcohol\"\r\n                },\r\n                {\r\n                    \"category\": \"g\",\r\n                    \"name\": \"Glass Type\"\r\n                }],\r\n            selectedCategory: \"\",\r\n            elementSearched: \"\"\r\n        }\r\n    }\r\n    handleSearchedElement = (event) => {\r\n        console.log(this.state.selectedCategory + \" \" + this.state.elementSearched);\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({elementSearched: event.target.value})\r\n    }\r\n\r\n    handleCategory = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({selectedCategory: event.target.value})\r\n    }\r\n\r\n    redirect = (event) => {\r\n        let element = this.state.elementSearched;\r\n        let category = this.state.selectedCategory;\r\n        this.setState(\r\n            {\r\n                elementSearched: \"\",\r\n                selectedCategory: \"\"\r\n        });\r\n        this.props.history.push('/find/' + category + \"/\" + element)\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg sticky-top navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">Drinkology</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav ml-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item px-3\">\r\n                                <Link className=\"nav-link\" to='/'>Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to='/mybar'>MyBar</Link>\r\n                            </li>\r\n                            <li className=\"nav-item pl-3\">\r\n                                <Link className=\"nav-link\" to='/all'>All Drinks</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <form className=\"d-flex ml-auto\">\r\n                        <select className=\"form-select form-control mr-2\" value={this.state.selectedCategory} onChange={this.handleCategory} >\r\n                        <option value=\"\" key=\"-1\" disabled >Select Category...</option>\r\n                            {this.state.categories.map((category, index) => {\r\n                                return <option key={index} value={category.category}>{category.name}</option>\r\n                            })}\r\n                        </select>\r\n                        <div className=\"input-group rounded align-items-center\">\r\n                            <input type=\"search\" className=\"form-control rounded\" value={this.state.elementSearched} onChange={this.handleSearch} placeholder=\"Search\" aria-label=\"Search\"\r\n                                aria-describedby=\"search-addon\" disabled={this.state.selectedCategory === \"\"}/>\r\n                            <button className=\"input-group-text border-0\" onClick={this.redirect} id=\"search-addon\" disabled={this.state.elementSearched === \"\" || this.state.selectedCategory === \"\"}>\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </button>\r\n                        </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n \r\nexport default withRouter(NavBar)","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n//npm install mdbreact\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\n//npm install @risingstack/react-easy-state\r\nimport { view } from '@risingstack/react-easy-state'\r\n \r\n\r\nclass DrinksTable extends Component {\r\n\r\n    \r\n    render() {\r\n\r\n        let { drinkData } = this.props;\r\n\r\n        const data = {\r\n            columns: this.getColumns(),\r\n            rows: this.getRows(drinkData)\r\n        }\r\n        return (\r\n            <\r\n                MDBDataTable\r\n                striped\r\n                bordered\r\n                hover\r\n                scrollX\r\n                responsive\r\n                fixed\r\n                entries={20} \r\n                maxHeight=\"50vh\"\r\n                searching={false}\r\n                data={data}\r\n            />          \r\n        )\r\n    }\r\n    \r\n    getColumns() {\r\n        const drinkTableColumns = [\r\n            { label: 'Drink ID', field: 'idDrink', sort: 'asc', width: 100 },\r\n            { label: 'Name', field: 'strDrink', sort: 'asc', width: 260},\r\n            { label: 'Category', field: 'strCategory', sort: 'asc', width: 180},\r\n            { label: 'IBA', field: 'strIBA', sort: 'asc', width: 200},\r\n            { label: 'Alcoholic?', field: 'strAlcoholic', sort: 'asc', width: 150 },\r\n            { label: 'Glass Type', field: 'strGlass', sort: 'asc', width: 175},\r\n            { label: 'Details', field: 'detail', sort: 'asc' }        \r\n        ]\r\n        return drinkTableColumns\r\n    }\r\n\r\n    getRows(drinkData) {\r\n        if ( drinkData == null || typeof(drinkData) == 'undefined') {\r\n            return []\r\n        }\r\n     \r\n        if ( !( drinkData.length > 0 ) ) { return [] }\r\n     \r\n        return drinkData.map((object) => {\r\n            return {\r\n                idDrink: object.idDrink,\r\n                strDrink: object.strDrink,\r\n                strCategory: object.strCategory,\r\n                strIBA: object.strIBA,\r\n                strAlcoholic: object.strAlcoholic,\r\n                strGlass: object.strGlass,\r\n                detail: <Link to={'/instructions/' + object.idDrink}><Button variant=\"outline-primary\" size=\"sm\">See Details</Button></Link>\r\n\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default view(DrinksTable)","import React from 'react'\r\nimport '../styles/autocomplete.css'\r\n\r\nclass Autocomplete extends React.Component {\r\n\r\n\r\n    renderSuggestions () {\r\n        const { suggestions, suggestedSelected } = this.props\r\n        if (suggestions.length === 0) {\r\n            return null;\r\n        }\r\n        return (\r\n            <ul>\r\n                {suggestions.map((item, i) => <li key={i} value={item} onClick={() => suggestedSelected(item)} >{item}</li>)}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    render () {\r\n        let { searchTerm, inputChange } = this.props\r\n        return (\r\n            <div className=\"AutocompleteText\">\r\n                <input value={searchTerm} type=\"text\" onChange={inputChange} />\r\n                {this.renderSuggestions()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Autocomplete","import React, { Component } from \"react\"\r\nimport { Col, Row, Button } from 'react-bootstrap'\r\nimport DrinkTable from '../components/drinktableV2'\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport Autocomplete from '../components/autocomplete'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../styles/allPage.css'\r\n\r\n \r\nclass allPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        //used to populate drinks table\r\n        drinks: [],\r\n\r\n        //Used for drink search\r\n        categories: [\r\n            {\r\n                \"category\": \"s\",\r\n                \"name\": \"Drink Name\"\r\n            },\r\n            {\r\n                \"category\": \"c\",\r\n                \"name\": \"Drink Category\"\r\n            },\r\n            {\r\n                \"category\": \"a\",\r\n                \"name\": \"Contains Alcohol\"\r\n            },\r\n            {\r\n                \"category\": \"g\",\r\n                \"name\": \"Glass Type\"\r\n            }],\r\n        searchCategory: '',\r\n        searchTerm: '',\r\n        filteredDrinks: [],\r\n\r\n        //for Autocomplete\r\n        allTerms: [],\r\n        suggestions: [],\r\n      }\r\n    }\r\n    \r\n    //Propogate drinks table when user loads the page\r\n    componentDidMount() {\r\n        if (!this.props.match.params.element && (this.state.drinks === undefined || this.state.drinks.length == 0)) {\r\n            this.loadAllDrinks()\r\n        }\r\n        else {\r\n            this.loadDrinksFromURL();\r\n        }\r\n    }\r\n\r\n    loadDrinksFromURL = () => {\r\n        let element = this.props.match.params.element\r\n        if(element){\r\n            element = element.replace(/%20/g, \" \");\r\n        }\r\n        this.setState({\r\n            searchTerm: this.props.match.params.element,\r\n            searchCategory: this.props.match.params.category,\r\n            allTerms: [this.props.match.params.element]\r\n\r\n        }, () => {\r\n            this.getDrinks();\r\n        })\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location.pathname !== prevProps.location.pathname) {\r\n            if (!this.props.match.params.element) {\r\n                this.setState({\r\n                    searchTerm: \"\",\r\n                    searchCategory: \"\"\r\n        \r\n                }, () => {\r\n                    this.loadAllDrinks()\r\n                })\r\n                \r\n            }else{\r\n                this.loadDrinksFromURL();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //Retrienve list of all drinks from API\r\n    loadAllDrinks = (event) =>  {\r\n        fetch(\"https://www.thecocktaildb.com/api/json/v2/9973533/search.php?s=\")\r\n          .then(data => data.json())\r\n          .then(data => {\r\n            this.setState({drinks: data.drinks})\r\n          })\r\n    }\r\n\r\n    //For Autocomplete, get list of search terms depending on the search category the user selected\r\n    getAllSearchTerms = (event) => {\r\n        let terms = []\r\n\r\n        if (this.state.searchCategory === 'c') {\r\n            fetch(\"https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list\")\r\n                .then(data => data.json())\r\n                .then(data => {\r\n                    data.drinks.forEach(drink => {\r\n                        terms = terms.concat(drink.strCategory)\r\n                    })\r\n                    this.setState({ allTerms: terms})\r\n\r\n                }) \r\n        }\r\n\r\n        else if (this.state.searchCategory === 'g') {\r\n            fetch(\"https://www.thecocktaildb.com/api/json/v1/1/list.php?g=list\")\r\n                .then(data => data.json())\r\n                .then(data => {\r\n                    data.drinks.forEach(drink => {\r\n                        terms = terms.concat(drink.strGlass)\r\n                    })\r\n                    this.setState({ allTerms: terms})\r\n\r\n                }) \r\n        }\r\n\r\n        else if (this.state.searchCategory === 'a') {\r\n        fetch(\"https://www.thecocktaildb.com/api/json/v1/1/list.php?a=list\")\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                data.drinks.forEach(drink => {\r\n                    terms = terms.concat(drink.strAlcoholic)\r\n                })\r\n                this.setState({ allTerms: terms})\r\n\r\n            }) \r\n        } \r\n    }\r\n    \r\n    //For Autocomplete, create suggestions based on user input changes\r\n    onTextChange = (event) => {\r\n        const value = event.target.value\r\n        let suggestions = [];\r\n        if (value.length > 0) {\r\n            const regex = new RegExp(`^${value}`, 'i');\r\n            suggestions = this.state.allTerms.sort().filter(v => regex.test(v));\r\n        }\r\n        this.setState(() => ({ suggestions, searchTerm: value }))  \r\n    } \r\n\r\n    //For Autocomplete, set input to the suggestion the user clicks\r\n    suggestedSelected = (search) => {\r\n        this.setState(() => ({\r\n            searchTerm: search,\r\n            suggestions: []\r\n        }))\r\n    }\r\n\r\n\r\n    //For changing category on searches\r\n    changeCategory = (event) => {\r\n        let value = event.currentTarget.value;\r\n        this.setState( prevState => { return { searchCategory:  value }}, () => {\r\n            this.getAllSearchTerms()\r\n        });\r\n    }\r\n\r\n    //For retrieving drinks from API based on search category and input from user\r\n    getDrinks = (event) => {\r\n        console.log(`search category = ${this.state.searchCategory}`)\r\n        console.log(`search term = ${this.state.searchTerm}`)\r\n        if (this.state.searchCategory === \"s\") {\r\n            fetch(\"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\" + this.state.searchTerm)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n              this.setState({drinks: data.drinks})\r\n            }) \r\n        }\r\n        else {\r\n            if (this.state.allTerms.includes(this.state.searchTerm)) {\r\n                fetch(\"https://www.thecocktaildb.com/api/json/v1/1/filter.php?\" + this.state.searchCategory + \"=\" + this.state.searchTerm)\r\n                .then(this.handleErrors)\r\n                .then(data => data.json())\r\n                .then(data => {\r\n                    this.setState({ filteredDrinks: data.drinks, drinks: [] }, () => {\r\n                        this.state.filteredDrinks.forEach(drink => {\r\n                            fetch(\"https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=\" + drink.idDrink)\r\n                                .then(data => data.json())\r\n                                .then(data => {\r\n                                    this.setState({\r\n                                        drinks: this.state.drinks.concat(data.drinks)\r\n                                        })\r\n                                }) \r\n                        })\r\n                    });\r\n                })  \r\n            }\r\n            else {\r\n                this.setState({ drinks: [] })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n        let { drinks, searchTerm, suggestions } = this.state;\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div id=\"all_page\">\r\n                    <h1 id=\"all_page_title\">Available Drinks</h1>\r\n                    <Row>\r\n                        <Button variant=\"info\" id=\"allDrinksButton\" size=\"sm\" onClick={this.loadAllDrinks}>See All Drinks</Button>\r\n                        <Col md={{ span: 7, offset: 1 }}>\r\n                            <Row className=\"drinkSearch align-items-center\">\r\n                                <Col>\r\n                                    <select className=\"form-select form-control mr-2\" value={this.state.searchCategory} onChange={this.changeCategory} >\r\n                                        <option value=\"\" key=\"-1\" disabled >Select Category...</option>\r\n                                        {this.state.categories.map((category, index) => {\r\n                                            if(category){\r\n                                                return <option key={index} value={category.category}>{category.name}</option>\r\n                                            }\r\n                                        })}\r\n                                    </select>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Autocomplete \r\n                                        inputChange={this.onTextChange}\r\n                                        suggestions={suggestions}\r\n                                        suggestedSelected={this.suggestedSelected}\r\n                                        searchTerm={searchTerm}\r\n                                    />\r\n                                </Col>\r\n                                <Button variant=\"success\" id=\"drinkSearchButton\" size=\"sm\" onClick={this.getDrinks}>Search Drinks</Button>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <DrinkTable drinkData = {drinks}></DrinkTable>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n \r\nexport default withRouter(allPage)","import React from \"react\"\r\nimport {Button} from 'react-bootstrap'\r\nimport '../styles/home.css'\r\nconst SERVICE_URL = \"https://www.thecocktaildb.com/api/json/v1/1/random.php\";\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cocktail: {},\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.setState({loading: true});\r\n        console.log(\"Loading data\");\r\n\r\n        fetch(SERVICE_URL)\r\n            .then((resp) => resp.json())\r\n            .then(resp =>  this.setState(\r\n                { cocktail: resp.drinks[0],\r\n\r\n            }\r\n            ))\r\n        .catch(function(error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"homePage\">\r\n                    <h1 style={{fontWeight: 'Bold'}}>Welcome!</h1>\r\n                    <hr className=\"thick\"/>  \r\n                        <p style={{fontWeight: 'Bold'}}>\r\n                            Welcome to Team 1's Drinkology Web App!\r\n                            Try out a new drink recipe below or find new recipes on your own.\r\n                            Discover all of the drinks you can create by visiting the <a href=\"/mybar\">MyBar</a> page! Simply login, select your ingredients, then get to drinking!\r\n                            Or explore all of the available drink recipes in the <a href=\"/all\">All Drinks</a> page.\r\n                        </p>\r\n                        <h2 style={{marginTop: '2em', fontWeight: 'Bold'}}>Try Something New!</h2>\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"row no-gutters special-card\">\r\n                                <div className=\"col-md-4\">\r\n                                    <img src={this.state.cocktail.strDrinkThumb} className=\"card-img\" alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"col-md-8\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{this.state.cocktail.strDrink}</h5>\r\n                                        <p>An {this.state.cocktail.strAlcoholic}  drink served in a {this.state.cocktail.strGlass}</p>\r\n                                        <Button variant=\"dark\" href={'/instructions/' + this.state.cocktail.idDrink }>See how its made!</Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div> \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport { Link } from 'react-router-dom'\r\nimport \"../styles/navbar.css\"\r\nimport React, { Component } from 'react';\r\nimport { Table, Button, Card, Col} from 'react-bootstrap'\r\n\r\n\r\nconst DrinkRow = ({drink}) =>{\r\n    return (\r\n        <tr>\r\n            <td>{drink.idDrink}</td>\r\n            <td>{drink.strDrink}</td>\r\n            <td>{drink.strCategory}</td>\r\n            <td>{drink.strIBA}</td>\r\n            <td>{drink.strAlcoholic}</td>\r\n            <td>{drink.strGlass}</td>\r\n        </tr>\r\n          \r\n    )\r\n}\r\n\r\n\r\n\r\nclass DrinkTable extends Component {\r\n\r\n    // this static property will initialize a prop with data\r\n    // if it hasn't been provided by the parent component\r\n    static defaultProps = {\r\n   \r\n        drinks: [\r\n            {\r\n              \"idDrink\": 1,\r\n              \"strDrink\": \"\",\r\n              \"strCategory\": \"\",\r\n              \"strIBA\": \"\",\r\n              \"strAlcoholic\": \"\",\r\n              \"strGlass\": \"\"\r\n           \r\n            }]\r\n    }\r\n\r\n    render() {\r\n      \r\n  \r\n        console.log(this.props.drinks)\r\n        return (\r\n            \r\n            <Table responsive striped bordered hover variant=\"dark\" >\r\n        <thead>\r\n          <tr>\r\n           \r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Category</th>\r\n            <th>IBA</th>\r\n            <th>Type</th>\r\n            <th>GlassType</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          \r\n      \r\n                \r\n                {this.props.drinks.map((drink, i) => {\r\n                 \r\n                    return <DrinkRow drink={drink}  />\r\n                                  \r\n                })}\r\n                  </tbody>\r\n                </Table>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default DrinkTable","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n//npm install mdbreact\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\n//npm install @risingstack/react-easy-state\r\nimport { view } from '@risingstack/react-easy-state'\r\n \r\n\r\nclass DrinksTable extends Component {\r\n   \r\n    \r\n    render() {\r\n        let { ableData } = this.props;\r\n       \r\n        let { drinkData } = this.props;\r\n      \r\n        const data = {\r\n            columns: this.getColumns(),\r\n            rows: this.getRows(drinkData, ableData)\r\n        }\r\n        return (\r\n            <\r\n                MDBDataTable\r\n                striped\r\n                bordered\r\n                hover\r\n                scrollX\r\n                responsive\r\n                fixed\r\n                entries={20} \r\n                maxHeight=\"50vh\"\r\n                searching={false}\r\n                data={data}\r\n            />          \r\n        )\r\n    }\r\n    \r\n    getColumns() {\r\n        const drinkTableColumns = [\r\n            { label: 'Drink ID', field: 'idDrink', sort: 'asc', width: 100 },\r\n            { label: 'Name', field: 'strDrink', sort: 'asc', width: 260},\r\n            { label: 'Category', field: 'strCategory', sort: 'asc', width: 180},\r\n            { label: 'Able To Make', field: 'strAble', sort: 'des', width: 200},\r\n            { label: 'Alcoholic?', field: 'strAlcoholic', sort: 'asc', width: 150 },\r\n            { label: 'Glass Type', field: 'strGlass', sort: 'asc', width: 175},\r\n            { label: 'Details', field: 'detail', sort: 'asc' }        \r\n        ]\r\n        return drinkTableColumns\r\n    }\r\n\r\n    getRows(drinkData, ableData) {\r\n        if ( drinkData == null || typeof(drinkData) == 'undefined') {\r\n            return []\r\n        }\r\n     \r\n      \r\n      \r\n        return drinkData.map((object) => {\r\n            \r\n           var strAble = \"True\";\r\n           if(!ableData.includes(object)){\r\n            strAble = \"False\";\r\n          \r\n           }\r\n            return {\r\n                \r\n                idDrink: object.idDrink,\r\n                strDrink: object.strDrink,\r\n                strCategory: object.strCategory,\r\n                strAble: strAble,\r\n                strAlcoholic: object.strAlcoholic,\r\n                strGlass: object.strGlass,\r\n                detail: <Link to={'/instructions/' + object.idDrink}><Button variant=\"outline-primary\" size=\"sm\">See Details</Button></Link>\r\n\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default view(DrinksTable)","import React, {Component} from \"react\"\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass Instructions extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            cocktail: {},\r\n            ingredients:[],\r\n            id:  this.props.match.params.id\r\n        }\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n       this.loadCocktail();\r\n        console.log(this.state.cocktail);\r\n    }\r\n\r\n    loadCocktail() {\r\n        this.setState({ loading: true })\r\n        fetch(`https://www.thecocktaildb.com/api/json/v2/9973533/lookup.php?i=${this.state.id}`)\r\n        .then(data => data.json())\r\n        .then(data => this.setState(\r\n            { cocktail: data.drinks[0],\r\n            ingredients:[\r\n                data.drinks[0].strIngredient1,\r\n                data.drinks[0].strIngredient2,\r\n                data.drinks[0].strIngredient3,        \r\n                data.drinks[0].strIngredient4,\r\n                data.drinks[0].strIngredient5,\r\n                data.drinks[0].strIngredient6,                     \r\n                data.drinks[0].strIngredient7,\r\n                data.drinks[0].strIngredient8,\r\n                data.drinks[0].strIngredient9,                     \r\n                data.drinks[0].strIngredient10,\r\n                data.drinks[0].strIngredient11,\r\n                data.drinks[0].strIngredient12,                     \r\n                data.drinks[0].strIngredient13,\r\n                data.drinks[0].strIngredient14,\r\n                data.drinks[0].strIngredient15        \r\n            ],\r\n            }\r\n        ))\r\n    }    \r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n                <div className=\"card bg-light\">\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col md-4\">\r\n                            <img className=\"card-img\" src={this.state.cocktail.strDrinkThumb}/>\r\n                        </div>\r\n                        <div className=\"col md-8\">\r\n                            <div className=\"card-body\">\r\n                                <h3 className=\"card-title\">{this.state.cocktail.strDrink}</h3>\r\n                                <h6 className=\"card-title\">{this.state.cocktail.strCategory}</h6>\r\n                                <ul style={{columns: '2'}}>\r\n                                    {this.state.ingredients.map((i, index) => {\r\n                                        if(i){\r\n                                            return <li key={index} className=\"text-left\">{i}</li>\r\n                                        }\r\n                                    })} \r\n                                </ul>\r\n                                <p>{this.state.cocktail.strInstructions}</p>\r\n                                <p className=\"card-text text-sm-center text-muted\">Last updated on {this.state.cocktail.dateModified}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n \r\n        );\r\n    }\r\n}\r\nexport default withRouter(Instructions)","import {extendObservable} from 'mobx'\r\n\r\n\r\nclass UserStore{\r\n    constructor(){\r\n        extendObservable(this,{\r\n            \r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: '',\r\n            canAdd:[]\r\n        })\r\n    }\r\n}\r\nexport default new UserStore();","import React from 'react';\r\nclass InputField extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"inputField\">\r\n                <input \r\n                className = \"input\"\r\n                type = {this.props.type}\r\n                placeholder = {this.props.placeholder}\r\n                value = {this.props.value}\r\n                onChange = { (e) => this.props.onChange (e.target.value)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default InputField;","import React from 'react';\r\nclass SubmitButton extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"submitbutton\">\r\n                <button\r\n                    className = \"btn\"\r\n                    disabled = {this.props.disabled}\r\n                    onClick  = { () => this.props.onClick()}>\r\n                        {this.props.text}\r\n\r\n                </button>\r\n            \r\n            \r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SubmitButton;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from '../stores/UserStore';\r\nimport '../styles/login.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\nclass LoginForm extends React.Component {\r\nconstructor(props){\r\n    super(props);\r\n    this.state = {\r\n        username: '',\r\n        password: '',\r\n        buttonDisabled: false\r\n    }\r\n}\r\nsetInputValue(property, val){\r\n    val = val.trim();\r\n    if(val.length > 12){\r\n        return;\r\n    }\r\n    this.setState({\r\n        [property]: val\r\n    })\r\n}\r\nresetForm(){\r\n    this.setState({\r\n        username: '',\r\n        password: '',\r\n        buttonDisabled: false\r\n\r\n    })\r\n}\r\nasync doLogin(){\r\n    if(!this.state.username){\r\n        return;\r\n    }\r\n    if(!this.state.password){\r\n        return;\r\n    }\r\n    this.setState({\r\n        buttonDisabled: true\r\n    })\r\n    try{\r\n        let res = await fetch('/login', {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            })\r\n       });\r\n       let result = await res.json();\r\n       if(result && result.success){\r\n           UserStore.isLoggedIn = true;\r\n           UserStore.username = result.username;\r\n\r\n       }\r\n       else if(result && result.success === false){\r\n           this.resetForm();\r\n           alert(result.msg);\r\n       }\r\n    }catch(e){\r\n        console.log(e);\r\n        this.resetForm();\r\n    }\r\n    \r\n}\r\n    render() {\r\n        return (\r\n            /*\r\n            <Form className=\"loginForm\">\r\n                <Form.Group>\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Username\"\r\n                    value={this.state.username ? this.state.username : ''}\r\n                    onChange = { (val) => this.setInputValue('username', val)}\r\n                    required>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\"\r\n                    value ={this.state.password ? this.state.password : ''}\r\n                    onChange = { (val) => this.setInputValue('password', val)}\r\n                    required>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\"\r\n                disabled = {this.state.buttonDisabled}\r\n                onClick = {() => this.doLogin()}>\r\n                    Log In\r\n                </Button>\r\n            </Form>\r\n            */\r\n            <div className = \"loginForm\">\r\n                Log in\r\n                <InputField\r\n                type ='text'\r\n                placeholder = 'Username'\r\n                value ={this.state.username ? this.state.username : ''}\r\n                onChange = { (val) => this.setInputValue('username', val)}/>\r\n\r\n                <InputField\r\n                type ='password'\r\n                placeholder = 'Password'\r\n                value ={this.state.password ? this.state.password : ''}\r\n                onChange = { (val) => this.setInputValue('password', val)}/>\r\n\r\n                <SubmitButton\r\n                text='Login'\r\n                disabled = {this.state.buttonDisabled}\r\n                onClick = {() => this.doLogin()}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LoginForm;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from '../stores/UserStore';\r\nimport { Form, Button } from 'react-bootstrap';\r\nclass AddUser extends React.Component {\r\nconstructor(props){\r\n    super(props);\r\n    this.state = {\r\n        username: '',\r\n        password: '',\r\n        cpassword: '',\r\n        buttonDisabled: false\r\n    }\r\n}\r\ncheckPassword(){\r\nconsole.log(this.state.password);\r\nconsole.log(this.state.cpassword);\r\n    if(this.props.password === this.props.cpassword){\r\n        return true;\r\n    }\r\n    else{ return false}\r\n}\r\nsetInputValue(property, val){\r\n    val = val.trim();\r\n    if(val.length > 12){\r\n        return;\r\n    }\r\n    this.setState({\r\n        [property]: val\r\n    })\r\n}\r\nresetForm(){\r\n    this.setState({\r\n        username: '',\r\n        password: '',\r\n        cpassword: '',\r\n        buttonDisabled: false\r\n\r\n    })\r\n}\r\nasync doLogin(){\r\n    if(!this.state.username){\r\n        return;\r\n    }\r\n    if(!this.state.password){\r\n        return;\r\n    }\r\n    this.setState({\r\n        buttonDisabled: true\r\n    })\r\n    try{\r\n        let res = await fetch('/login', {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            })\r\n       });\r\n       let result = await res.json();\r\n       if(result && result.success){\r\n           UserStore.isLoggedIn = true;\r\n           UserStore.username = result.username;\r\n\r\n       }\r\n       else if(result && result.success === false){\r\n           this.resetForm();\r\n           alert(result.msg);\r\n       }\r\n    }catch(e){\r\n        console.log(e);\r\n        this.resetForm();\r\n    }\r\n    \r\n}\r\nasync add(){\r\n\r\n    if(this.checkPassword() === true){\r\n\r\n      \r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n        try{\r\n            let res = await fetch('/add', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n                \r\n        });\r\n        \r\n        let result = await res.json();\r\n        \r\n        }catch(e){\r\n            console.log(e);\r\n            this.resetForm();\r\n        }\r\n    }\r\n   \r\n\r\n    \r\n}\r\n\r\n    render() {\r\n        return (\r\n            /*            \r\n            <Form className=\"loginForm\">\r\n                <Form.Group controlId=\"formUsername\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\"\r\n                    value ={this.state.username ? this.state.username : ''}\r\n                    onChange = { (val) => this.setInputValue('password', val)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Enter Password\"\r\n                    value ={this.state.password ? this.state.password : ''}\r\n                    onChange = { (val) => this.setInputValue('password', val)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formConfirmPassword\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Confirm Password\"\r\n                        value ={this.state.cpassword ? this.state.cpassword : ''}\r\n                        onChange = { (val) => this.setInputValue('cpassword', val)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\"\r\n                disabled = {this.state.buttonDisabled}\r\n                onClick = {() => this.add()}>\r\n                    Sign Up\r\n                </Button>\r\n            </Form>\r\n            */\r\n            <div className = \"loginForm\">\r\n                Add User\r\n                <InputField\r\n                type ='text'\r\n                placeholder = 'Username'\r\n                value ={this.state.username ? this.state.username : ''}\r\n                onChange = { (val) => this.setInputValue('username', val)}/>\r\n\r\n                <InputField\r\n                type ='password'\r\n                placeholder = 'Password'\r\n                value ={this.state.password ? this.state.password : ''}\r\n                onChange = { (val) => this.setInputValue('password', val)}/>\r\n\r\n                <InputField\r\n                type ='password'\r\n                placeholder = 'Confirm Password'\r\n                value ={this.state.cpassword ? this.state.cpassword : ''}\r\n                onChange = { (val) => this.setInputValue('cpassword', val)}/>\r\n\r\n                <SubmitButton\r\n                text='Add User'\r\n                disabled = {this.state.buttonDisabled}\r\n                onClick = {() => this.add()}/>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default AddUser;","import logo from \"../logo.svg\"\r\nimport { Link } from 'react-router-dom'\r\nimport React, { Component } from \"react\"\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport DrinkTable from \"../components/drinktable\"\r\nimport DrinkTable2 from \"../components/drinktableV2\"\r\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\nimport '../styles/mybar.css'\r\nimport MyBarTable from \"../components/myBarTable\"\r\nimport NavBar from \"../components/navbar\"\r\nimport All from \"./all\"\r\nimport HomePage from './home'\r\n\r\nimport Instructions from \"./instructions\"\r\nimport UserStore from \"../stores/UserStore\"\r\nimport LoginForm from \"../components/LoginForm\"\r\nimport InputField from \"../components/InputField\"\r\nimport SubmitButton from \"../components/SubmitButton\"\r\nimport {observer} from 'mobx-react'\r\nimport AddUser from \"../components/AddUser\"\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\n\r\nconst INGREDIENT_PATH = \"https://www.thecocktaildb.com/api/json/v2/9973533/list.php?i=list\"\r\nconst ALL_PATH = \"https://www.thecocktaildb.com/api/json/v2/9973533/search.php?s=\"\r\n\r\n\r\n\r\nvar options = [\r\n \r\n];\r\n\r\n\r\nclass MyBar extends Component {\r\n  \r\n    state = {\r\n        showLogin: true,\r\n        drinks: []\r\n         \r\n        ,\r\n        ableToMake:[\r\n\r\n        ],\r\n        useringredients:[],\r\n        ingredientList:[\r\n        ]\r\n \r\n\r\n      }\r\n\r\n    async componentDidMount() {\r\n      this.loadDrinks();\r\n      this.getIngredients();\r\n     // this.getDrinksByIngredients();\r\n      console.log(this.state.ingredientList);\r\n      console.log(this.state.useringredients);\r\n        try{\r\n          let res = await fetch('/isLoggedIn', {\r\n            method: 'post',\r\n            header: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n    \r\n          let result = await res.json();\r\n    \r\n          if(result && result.success){\r\n            UserStore.loading = false;\r\n            UserStore.isLoggedIn = true;\r\n            UserStore.username = result.username;\r\n            \r\n          }\r\n          else{\r\n            UserStore.loading = false;\r\n            UserStore.isLoggedIn = false;\r\n          }\r\n    \r\n    \r\n        }\r\n        catch(e){\r\n          UserStore.loading =false;\r\n          UserStore.isLoggedIn = false;\r\n        }\r\n     \r\n      }\r\n    \r\n      \r\n    async doLogout() {\r\n    \r\n        try{\r\n          let res = await fetch('/logout', {\r\n            method: 'post',\r\n            header: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n    \r\n          let result = await res.json();\r\n    \r\n          if(result && result.success){\r\n            UserStore.isLoggedIn = false;\r\n            UserStore.username = '';\r\n          \r\n          }\r\n    \r\n    \r\n        }\r\n        catch(e){\r\n          console.log(e);\r\n        }\r\n    \r\n      }\r\n     \r\n      \r\n//inits both drink and ingredient lists\r\n      loadDrinks(){\r\n       \r\n        fetch(ALL_PATH)\r\n          .then(data => data.json())\r\n          .then(data => {\r\n       this.state.ingredientList =[];\r\n       this.setState({ingredientList:[]});\r\n            this.setState({drinks: data.drinks});\r\n            data.drinks.map((drink, i) => {\r\n              var ingredients = [\r\n                drink.strIngredient1,\r\n                drink.strIngredient2,\r\n                drink.strIngredient3,\r\n                drink.strIngredient4,\r\n                drink.strIngredient5,\r\n                drink.strIngredient6,\r\n                drink.strIngredient7,\r\n                drink.strIngredient8,\r\n                drink.strIngredient9,\r\n                drink.strIngredient10,\r\n                drink.strIngredient11,\r\n                drink.strIngredient12,\r\n                drink.strIngredient13,\r\n                drink.strIngredient14,\r\n                drink.strIngredient15,\r\n              ]\r\n              var filtered = ingredients.filter(function (el) {\r\n                return el != null;\r\n              });\r\n             filtered.map((x, i) =>{\r\n                filtered[i] = x.toLowerCase();\r\n             });\r\n              \r\n              this.state.ingredientList.push(filtered);   \r\n\r\n              \r\n           \r\n                        \r\n            });\r\n           \r\n            this.setState({\r\n             ingredientList: this.state.ingredientList}, () => {this.getIngredientsFromDB()})\r\n       \r\n      \r\n\r\n              });\r\n\r\n              \r\n           \r\n      \r\n      }\r\n     \r\n      //stores ingredients passed in into the DB\r\n   async storeUserIngredients(i){\r\n  \r\n          try{\r\n              let res = await fetch('/store', {\r\n                  method: 'post',\r\n                  headers: {\r\n                      'Accept': 'application/json',\r\n                      'Content-Type': 'application/json'\r\n                  },\r\n                  body: JSON.stringify({\r\n                      username: UserStore.username,\r\n                      uingredients: i\r\n                 \r\n                  })\r\n                  \r\n          });\r\n          \r\n          let result = await res.json();\r\n          \r\n          }catch(e){\r\n              console.log(e);\r\n             \r\n          }\r\n      \r\n     }\r\n     \r\n     async getDrinksByIngredients(){\r\n      this.state.ableToMake =[];\r\n      this.setState({ableToMake: []});\r\n      console.log(\"get drinks by ingredients\");\r\n      var canMake =[];\r\n    \r\n      this.state.ingredientList.map((ingredients, i) =>{ \r\n       var canAdd = true;\r\n      \r\n     \r\n       ingredients.map((item, x) =>{ \r\n       \r\n           if(!this.state.useringredients.includes(item.toLowerCase())){\r\n\r\n               canAdd = false;           \r\n           }\r\n           \r\n         }\r\n       \r\n       );\r\n      \r\n\r\n       if(canAdd == true && !(this.state.ableToMake.includes(this.state.drinks[i]))){\r\n         \r\n           canMake.push(this.state.drinks[i]);\r\n          \r\n       }\r\n     });\r\n  \r\n    \r\n    \r\n      \r\n\r\n  if(canMake.length != 0 ){\r\n      \r\n console.log(canMake);\r\n    this.setState({\r\n      ableToMake: this.state.ableToMake.concat(canMake)});\r\n\r\n      \r\n  \r\n    }\r\n   \r\n  }\r\n  selectFunction = (event) =>{\r\n      \r\n        let newIngredients = event.map(a => a.value.toLowerCase());\r\n        this.storeUserIngredients(newIngredients);\r\n        this.loadDrinks();\r\n       \r\n    }\r\n  async getIngredientsFromDB(){\r\n    this.state.useringredients =[];\r\n    this.setState({useringredients: []});\r\n      try{\r\n        let res = await fetch('/getingredients', {\r\n            method: 'get',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n           \r\n            \r\n      });\r\n      \r\n      \r\n      let result = await res.json();\r\n\r\n     result.map((x, i) =>{ \r\n        this.state.useringredients.push(x.strName.toLowerCase());\r\n        \r\n     });\r\n    \r\n     this.setState({useringredients: this.state.useringredients}, () => { this.getDrinksByIngredients()});\r\n     \r\n    \r\n    \r\n      }catch(e){\r\n        console.log(e);\r\n       \r\n      }\r\n  }\r\n\r\n\r\n    getIngredients(){\r\n      options =[];\r\n      \r\n      fetch(INGREDIENT_PATH)\r\n        .then(data => data.json())\r\n        .then(data => {\r\n           \r\n          data.drinks.map((ingredient, i) => {\r\n            options.push( { label: ingredient.strIngredient1, value: ingredient.strIngredient1});\r\n                            \r\n        });\r\n        \r\n        \r\n      \r\n        })\r\n         \r\n    }\r\n\r\n    changeLogin() {\r\n      if (this.isLoggedIn) {\r\n        this.setState({isLoggedIn: false});\r\n      } else {\r\n        this.setState({isLoggedIn: true});\r\n      }\r\n    }\r\n\r\n    render() {\r\n     \r\n      if(UserStore.loading){\r\n        return(\r\n            <div className=\"App\">\r\n                <div className = 'container'>\r\n                  \r\n                  Loading, please wait...;\r\n                </div>\r\n            </div>\r\n      \r\n         ) }\r\n         else{\r\n         \r\n            \r\n          if(UserStore.isLoggedIn){\r\n            \r\n            return ( \r\n              <div >\r\n                <h1 id=\"mybar_page_title\">Select which Ingredients you have at home!</h1>\r\n                <div class = \"selectbox\">\r\n                <ReactMultiSelectCheckboxes options={options} onChange ={this.selectFunction}></ReactMultiSelectCheckboxes>\r\n                </div>\r\n                <br></br>\r\n                <MyBarTable drinkData = {this.state.drinks} ableData ={this.state.ableToMake}></MyBarTable>\r\n              \r\n\r\n                Welcome {UserStore.username}\r\n                <SubmitButton \r\n                text = {'Log out'} \r\n                disabled = {false} \r\n                onClick = { () => this.doLogout() }/>\r\n              </div>\r\n          \r\n             \r\n            )\r\n          }else{\r\n            console.log(this.state.isNewUser);\r\n            return (\r\n              <div className=\"App\">\r\n\r\n                      <Row>\r\n                        {(!this.state.isNewUser) ? <LoginForm /> : <AddUser />}\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                        <Button className=\"formChangeBtn\" onClick = { () => this.setState(({isNewUser}) => ({isNewUser: !isNewUser}))}>\r\n                        {(!this.state.isNewUser) ? \"New User?\" : \"Already have an account?\"}\r\n                        </Button>\r\n                        </Col>\r\n                      </Row>\r\n\r\n                </div>\r\n            )\r\n            \r\n          }\r\n         }\r\n    }\r\n    \r\n}\r\n \r\nexport default observer(MyBar)","import React, { Component } from \"react\"\r\nimport { Switch, Route } from \"react-router-dom\"\r\n\r\nimport './App.css'\r\nimport NavBar from \"./components/navbar\"\r\nimport All from \"./pages/all\"\r\nimport HomePage from './pages/home'\r\nimport MyBar from \"./pages/mybar\"\r\nimport Instructions from \"./pages/instructions\"\r\nimport UserStore from \"./stores/UserStore\"\r\nimport LoginForm from \"./components/LoginForm\"\r\nimport InputField from \"./components/InputField\"\r\nimport SubmitButton from \"./components/SubmitButton\"\r\nimport {observer} from 'mobx-react'\r\nconst INGREDIENT_PATH = \"https://www.thecocktaildb.com/api/json/v2/9973533/list.php?i=list\"\r\nclass App extends React.Component{\r\n\r\n\r\n\r\n\r\n    render() {\r\n    \r\n        return (\r\n            <div className=\"App\">\r\n                <NavBar/>\r\n                <main>\r\n                    <Switch>\r\n                        <Route exact path='/' component={HomePage} />\r\n                        <Route path='/home' component={HomePage} />\r\n                        <Route path='/mybar' component={MyBar}  />\r\n                        <Route path='/all' component={All} />\r\n                        <Route path='/instructions/:id' component={Instructions} />\r\n                        <Route path='/find/:category/:element' component={All} />\r\n                    </Switch>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n \r\nexport default observer(App)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nReactDOM.render((\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>\n ), document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}