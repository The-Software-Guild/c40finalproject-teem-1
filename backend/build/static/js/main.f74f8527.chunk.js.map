{"version":3,"sources":["components/navbar.js","components/drinktableV2.js","components/autocomplete.js","pages/all.js","pages/home.js","logo.svg","components/drinktable.js","components/myBarTable.js","pages/instructions.js","stores/UserStore.js","components/InputField.js","components/SubmitButton.js","components/LoginForm.js","pages/mybar.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","handleSearchedElement","event","console","log","state","selectedCategory","elementSearched","handleSearch","target","value","setState","handleCategory","tmp","match","params","categories","className","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onChange","this","map","category","index","name","placeholder","aria-describedby","disabled","Component","withRouter","DrinksTable","drinkData","data","columns","getColumns","rows","getRows","striped","bordered","hover","scrollX","responsive","fixed","entries","maxHeight","searching","label","field","sort","width","length","object","idDrink","strDrink","strCategory","strIBA","strAlcoholic","strGlass","detail","Button","variant","size","view","Autocomplete","suggestions","suggestedSelected","item","i","onClick","searchTerm","inputChange","renderSuggestions","React","allPage","loadDrinksFromURL","element","replace","searchCategory","getDrinks","loadAllDrinks","fetch","then","json","drinks","getAllSearchTerms","terms","forEach","drink","concat","allTerms","onTextChange","regex","RegExp","filter","v","test","search","changeCategory","currentTarget","prevState","filteredDrinks","allSearchTerms","location","PropTypes","undefined","prevProps","pathname","Col","md","span","offset","Row","HomePage","componentDidMount","loading","resp","cocktail","catch","error","style","fontWeight","marginTop","src","strDrinkThumb","alt","href","DrinkRow","DrinkTable","Table","defaultProps","ableData","strAble","includes","Instructions","loadCocktail","ingredients","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strIngredient6","strIngredient7","strIngredient8","strIngredient9","strIngredient10","strIngredient11","strIngredient12","strIngredient13","strIngredient14","strIngredient15","strInstructions","dateModified","extendObservable","isLoggedIn","username","InputField","e","SubmitButton","text","LoginForm","password","buttonDisabled","property","val","trim","a","method","headers","body","JSON","stringify","res","result","success","UserStore","resetForm","alert","msg","setInputValue","doLogin","options","MyBar","ableToMake","ingredientList","ingredient","getDrinksByIngredients","userIngredients","toLowerCase","canMake","canAdd","x","push","loadDrinks","getIngredients","header","filtered","el","doLogout","observer","App","exact","path","component","All","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f74f8527.chunk.js","sourcesContent":["import React, {Component} from \"react\"\r\nimport { Link } from 'react-router-dom'\r\nimport \"../styles/navbar.css\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass NavBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.tmp = this.props.match.params;\r\n        this.state = {\r\n            categories: [\r\n                {\r\n                    \"category\": \"s\",\r\n                    \"name\": \"Drink Name\"\r\n                },\r\n                {\r\n                    \"category\": \"c\",\r\n                    \"name\": \"Drink Category\"\r\n                },\r\n                {\r\n                    \"category\": \"a\",\r\n                    \"name\": \"Contains Alcohol\"\r\n                },\r\n                {\r\n                    \"category\": \"g\",\r\n                    \"name\": \"Glass Type\"\r\n                }],\r\n            selectedCategory: \"s\",\r\n            elementSearched: \"\"\r\n        }\r\n    }\r\n    handleSearchedElement = (event) => {\r\n        console.log(this.state.selectedCategory + \" \" + this.state.elementSearched);\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({elementSearched: event.target.value})\r\n    }\r\n\r\n    handleCategory = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({selectedCategory: event.target.value})\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">Drinkology</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav ml-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item px-3\">\r\n                                <Link className=\"nav-link\" to='/'>Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to='/mybar'>MyBar</Link>\r\n                            </li>\r\n                            <li className=\"nav-item pl-3\">\r\n                                <Link className=\"nav-link\" to='/all'>All</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <form className=\"d-flex ml-auto\">\r\n                        <select className=\"form-select form-control mr-2\" onChange={this.handleCategory} >\r\n                            {this.state.categories.map((category, index) => {\r\n                                if(category){\r\n                                    return <option key={index} value={category.category}>{category.name}</option>\r\n                                }\r\n                            })}\r\n                        </select>\r\n                        <div className=\"input-group rounded\">\r\n                            <input type=\"search\" className=\"form-control rounded\" onChange={this.handleSearch} placeholder=\"Search\" aria-label=\"Search\"\r\n                                aria-describedby=\"search-addon\" disabled={this.state.selectedCategory === \"\"}/>\r\n                            <button className=\"input-group-text border-0\" id=\"search-addon\" disabled={this.state.elementSearched === \"\"}>\r\n                                <Link to={'/find/' + this.state.selectedCategory + \"/\" + this.state.elementSearched} ><i className=\"fas fa-search\"></i></Link>\r\n                            </button>\r\n                        </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n \r\nexport default withRouter(NavBar)","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n//npm install mdbreact\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\n//npm install @risingstack/react-easy-state\r\nimport { view } from '@risingstack/react-easy-state'\r\n \r\n\r\nclass DrinksTable extends Component {\r\n\r\n    \r\n    render() {\r\n\r\n        let { drinkData } = this.props;\r\n\r\n        const data = {\r\n            columns: this.getColumns(),\r\n            rows: this.getRows(drinkData)\r\n        }\r\n        return (\r\n            <\r\n                MDBDataTable\r\n                striped\r\n                bordered\r\n                hover\r\n                scrollX\r\n                responsive\r\n                fixed\r\n                entries={20} \r\n                maxHeight=\"50vh\"\r\n                searching={false}\r\n                data={data}\r\n            />          \r\n        )\r\n    }\r\n    \r\n    getColumns() {\r\n        const drinkTableColumns = [\r\n            { label: 'Drink ID', field: 'idDrink', sort: 'asc', width: 100 },\r\n            { label: 'Name', field: 'strDrink', sort: 'asc', width: 260},\r\n            { label: 'Category', field: 'strCategory', sort: 'asc', width: 180},\r\n            { label: 'IBA', field: 'strIBA', sort: 'asc', width: 200},\r\n            { label: 'Alcoholic?', field: 'strAlcoholic', sort: 'asc', width: 150 },\r\n            { label: 'Glass Type', field: 'strGlass', sort: 'asc', width: 175},\r\n            { label: 'Details', field: 'detail', sort: 'asc' }        \r\n        ]\r\n        return drinkTableColumns\r\n    }\r\n\r\n    getRows(drinkData) {\r\n        if ( drinkData == null || typeof(drinkData) == 'undefined') {\r\n            return []\r\n        }\r\n     \r\n        if ( !( drinkData.length > 0 ) ) { return [] }\r\n     \r\n        return drinkData.map((object) => {\r\n            return {\r\n                idDrink: object.idDrink,\r\n                strDrink: object.strDrink,\r\n                strCategory: object.strCategory,\r\n                strIBA: object.strIBA,\r\n                strAlcoholic: object.strAlcoholic,\r\n                strGlass: object.strGlass,\r\n                detail: <Link to={'/instructions/' + object.idDrink}><Button variant=\"outline-primary\" size=\"sm\">See Details</Button></Link>\r\n\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default view(DrinksTable)","import React from 'react'\r\nimport '../styles/autocomplete.css'\r\n\r\nclass Autocomplete extends React.Component {\r\n\r\n\r\n    renderSuggestions () {\r\n        const { suggestions, suggestedSelected } = this.props\r\n        if (suggestions.length === 0) {\r\n            return null;\r\n        }\r\n        return (\r\n            <ul>\r\n                {suggestions.map((item, i) => <li key={i} value={item} onClick={() => suggestedSelected(item)} >{item}</li>)}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    render () {\r\n        let { searchTerm, inputChange } = this.props\r\n        return (\r\n            <div className=\"AutocompleteText\">\r\n                <input value={searchTerm} type=\"text\" onChange={inputChange} />\r\n                {this.renderSuggestions()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Autocomplete","import React, { Component } from \"react\"\r\nimport { Col, Row, Button } from 'react-bootstrap'\r\nimport DrinkTable from '../components/drinktableV2'\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport Autocomplete from '../components/autocomplete'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../styles/allPage.css'\r\n\r\n \r\nclass allPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //allSearchTerms = for testing autocomplete\r\n        this.allSearchTerms =[\r\n            'Margarita',\r\n            'Shot glass',\r\n            'Non Alcoholic'\r\n        ];\r\n        this.state = {\r\n        //used to populate drinks table\r\n        drinks: [],\r\n        categories: [\r\n            {\r\n                \"category\": \"s\",\r\n                \"name\": \"Drink Name\"\r\n            },\r\n            {\r\n                \"category\": \"c\",\r\n                \"name\": \"Drink Category\"\r\n            },\r\n            {\r\n                \"category\": \"a\",\r\n                \"name\": \"Contains Alcohol\"\r\n            },\r\n            {\r\n                \"category\": \"g\",\r\n                \"name\": \"Glass Type\"\r\n            }],\r\n\r\n        //Used for drink search\r\n        searchCategory: '',\r\n        searchTerm: '',\r\n        filteredDrinks: [],\r\n        \r\n        location: React.PropTypes,\r\n\r\n        //for Autocomplete\r\n        allTerms: [],\r\n        suggestions: [],\r\n      }\r\n    }\r\n    \r\n\r\n\r\n    componentDidMount() {\r\n\r\n        if (!this.props.match.params.element && (this.state.drinks === undefined || this.state.drinks.length == 0)) {\r\n            this.loadAllDrinks()\r\n            this.getAllSearchTerms()\r\n        }\r\n        else {\r\n            this.loadDrinksFromURL();\r\n        }\r\n    }\r\n\r\n    loadDrinksFromURL = () => {\r\n        let element = this.props.match.params.element\r\n                if(element){\r\n                    element = element.replace(/%20/g, \" \");\r\n                }\r\n                // if(this.props.match.params){\r\n                this.setState({\r\n                    searchTerm: this.props.match.params.element,\r\n                    searchCategory: this.props.match.params.category\r\n        \r\n                }, () => {\r\n                    this.getDrinks();\r\n                })\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location.pathname !== prevProps.location.pathname) {\r\n            if (!this.props.match.params.element) {\r\n                this.setState({\r\n                    searchTerm: \"\",\r\n                    searchCategory: \"\"\r\n        \r\n                }, () => {\r\n                    this.loadAllDrinks()\r\n                })\r\n                \r\n            }else{\r\n                this.loadDrinksFromURL();\r\n            }\r\n            this.setState({location: prevProps.location.pathname});\r\n        }\r\n    }\r\n\r\n\r\n    //Retrienve list of all drinks from API\r\n    loadAllDrinks = (event) =>  {\r\n        fetch(\"https://www.thecocktaildb.com/api/json/v2/9973533/search.php?s=\")\r\n          .then(data => data.json())\r\n          .then(data => {\r\n           console.log(data.drinks)\r\n            this.setState({drinks: data.drinks})\r\n          })\r\n    }\r\n\r\n    //For Autocomplete, get list of terms user can use to search for \"category\", \"glass type\", and \"alcoholic\"\r\n    getAllSearchTerms = (event) => {\r\n        let terms = []\r\n        fetch(\"https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list\")\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data.drinks)\r\n                data.drinks.forEach(drink => {\r\n                    terms = terms.concat(drink.strCategory)\r\n                    console.log(terms)\r\n                })\r\n                this.setState({ allTerms: terms})\r\n\r\n            }) \r\n\r\n        fetch(\"https://www.thecocktaildb.com/api/json/v1/1/list.php?g=list\")\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data.drinks)\r\n                data.drinks.forEach(drink => {\r\n                    terms = terms.concat(drink.strGlass)\r\n                    console.log(terms)\r\n                })\r\n                this.setState({ allTerms: terms})\r\n\r\n            }) \r\n\r\n        fetch(\"https://www.thecocktaildb.com/api/json/v1/1/list.php?a=list\")\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data.drinks)\r\n                data.drinks.forEach(drink => {\r\n                    terms = terms.concat(drink.strAlcoholic)\r\n                    console.log(terms)\r\n                })\r\n                this.setState({ allTerms: terms})\r\n\r\n            }) \r\n        \r\n        \r\n    }\r\n    \r\n    //For Autocomplete\r\n    onTextChange = (event) => {\r\n        const value = event.target.value\r\n        let suggestions = [];\r\n        console.log(this.state.allTerms)\r\n        if (value.length > 0) {\r\n            const regex = new RegExp(`^${value}`, 'i');\r\n            suggestions = this.state.allTerms.sort().filter(v => regex.test(v));\r\n        }\r\n        this.setState(() => ({ suggestions, searchTerm: value }))  \r\n    } \r\n\r\n    //For Autocomplete\r\n    suggestedSelected = (search) => {\r\n        this.setState(() => ({\r\n            searchTerm: search,\r\n            suggestions: []\r\n        }))\r\n    }\r\n\r\n\r\n    //For changing category on searches\r\n    changeCategory = (event) => {\r\n        console.log(`Current search Category: ${this.state.searchCategory}`)\r\n        let value = event.currentTarget.value;\r\n        console.log(`value: ` + value)\r\n\r\n        this.setState( prevState => { return { searchCategory:  value }}       \r\n        );\r\n    }\r\n\r\n    //For retrieving drinks from API based on search category and input from user\r\n    getDrinks = (event) => {\r\n        console.log(`search category = ${this.state.searchCategory}`)\r\n        console.log(`search term = ${this.state.searchTerm}`)\r\n        if (this.state.searchCategory === \"s\") {\r\n            fetch(\"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\" + this.state.searchTerm)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n             console.log(data.drinks)\r\n              this.setState({drinks: data.drinks})\r\n            }) \r\n        }\r\n        else {\r\n            fetch(\"https://www.thecocktaildb.com/api/json/v1/1/filter.php?\" + this.state.searchCategory + \"=\" + this.state.searchTerm)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data.drinks)\r\n                this.setState({ filteredDrinks: data.drinks, drinks: [] }, () => {\r\n                    console.log(`${this.state.filteredDrinks}`);\r\n                    this.state.filteredDrinks.forEach(drink => {\r\n                        console.log('drink : ' + drink.strDrink)\r\n                        fetch(\"https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=\" + drink.idDrink)\r\n                            .then(data => data.json())\r\n                            .then(data => {\r\n                                this.setState({\r\n                                    drinks: this.state.drinks.concat(data.drinks)\r\n                                    })\r\n                            }) \r\n                    })\r\n                });\r\n            })  \r\n        }\r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n        let { drinks, searchTerm, suggestions } = this.state;\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div id=\"all_page\">\r\n                    <h1 id=\"all_page_title\">Available Drinks</h1>\r\n                    <Col md={{ span: 6, offset: 3 }}>\r\n                        <Row className=\"drinkSearch\">\r\n                            <Col>\r\n                                <select className=\"form-select form-control mr-2\" value={this.state.searchCategory} onChange={this.changeCategory} >\r\n                                    <option value=\"\" key=\"-1\" disabled >Select Category...</option>\r\n                                    {this.state.categories.map((category, index) => {\r\n                                        if(category){\r\n                                            return <option key={index} value={category.category}>{category.name}</option>\r\n                                        }\r\n                                    })}\r\n                                </select>\r\n                            </Col>\r\n                            <Col>\r\n                                <Autocomplete \r\n                                    inputChange={this.onTextChange}\r\n                                    suggestions={suggestions}\r\n                                    suggestedSelected={this.suggestedSelected}\r\n                                    searchTerm={searchTerm}\r\n                                />\r\n                            </Col>\r\n                            <Button id=\"drinkSearchButton\" size=\"sm\" onClick={this.getDrinks}>Search Drinks</Button>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <DrinkTable drinkData = {drinks}></DrinkTable>\r\n                    <Button id=\"searchDrinkButton\"variant=\"Secondary\" onClick={this.loadAllDrinks}>See All Drinks</Button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n \r\nexport default withRouter(allPage)","import React from \"react\"\r\nimport {Button} from 'react-bootstrap'\r\nimport '../styles/home.css'\r\nconst SERVICE_URL = \"https://www.thecocktaildb.com/api/json/v1/1/random.php\";\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cocktail: {},\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.setState({loading: true});\r\n        console.log(\"Loading data\");\r\n\r\n        fetch(SERVICE_URL)\r\n            .then((resp) => resp.json())\r\n            .then(resp =>  this.setState(\r\n                { cocktail: resp.drinks[0],\r\n\r\n            }\r\n            ))\r\n        .catch(function(error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"homePage\">\r\n                    <h1 style={{fontWeight: 'Bold'}}>Welcome!</h1>\r\n                    <hr className=\"thick\"/>  \r\n                        <p style={{fontWeight: 'Bold'}}>\"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, \r\n                            totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae \r\n                            dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit,\r\n                            sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est,\r\n                            qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora\r\n                            incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum \r\n                            exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem\r\n                            vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui\r\n                            dolorem eum fugiat quo voluptas nulla pariatur?\r\n                        </p>\r\n                        <h2 style={{marginTop: '2em', fontWeight: 'Bold'}}>Try Something New!</h2>\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"row no-gutters special-card\">\r\n                                <div className=\"col-md-4\">\r\n                                    <img src={this.state.cocktail.strDrinkThumb} className=\"card-img\" alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"col-md-8\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{this.state.cocktail.strDrink}</h5>\r\n                                        <p>An {this.state.cocktail.strAlcoholic}  drink served in a {this.state.cocktail.strGlass}</p>\r\n                                        <Button variant=\"dark\" href={'/instructions/' + this.state.cocktail.idDrink }>See how its made!</Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div> \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport { Link } from 'react-router-dom'\r\nimport \"../styles/navbar.css\"\r\nimport React, { Component } from 'react';\r\nimport { Table, Button, Card, Col} from 'react-bootstrap'\r\n\r\n\r\nconst DrinkRow = ({drink}) =>{\r\n    return (\r\n        <tr>\r\n            <td>{drink.idDrink}</td>\r\n            <td>{drink.strDrink}</td>\r\n            <td>{drink.strCategory}</td>\r\n            <td>{drink.strIBA}</td>\r\n            <td>{drink.strAlcoholic}</td>\r\n            <td>{drink.strGlass}</td>\r\n        </tr>\r\n          \r\n    )\r\n}\r\n\r\n\r\n\r\nclass DrinkTable extends Component {\r\n\r\n    // this static property will initialize a prop with data\r\n    // if it hasn't been provided by the parent component\r\n    static defaultProps = {\r\n   \r\n        drinks: [\r\n            {\r\n              \"idDrink\": 1,\r\n              \"strDrink\": \"\",\r\n              \"strCategory\": \"\",\r\n              \"strIBA\": \"\",\r\n              \"strAlcoholic\": \"\",\r\n              \"strGlass\": \"\"\r\n           \r\n            }]\r\n    }\r\n\r\n    render() {\r\n      \r\n  \r\n        console.log(this.props.drinks)\r\n        return (\r\n            \r\n            <Table responsive striped bordered hover variant=\"dark\" >\r\n        <thead>\r\n          <tr>\r\n           \r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Category</th>\r\n            <th>IBA</th>\r\n            <th>Type</th>\r\n            <th>GlassType</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          \r\n      \r\n                \r\n                {this.props.drinks.map((drink, i) => {\r\n                 \r\n                    return <DrinkRow drink={drink}  />\r\n                                  \r\n                })}\r\n                  </tbody>\r\n                </Table>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default DrinkTable","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n//npm install mdbreact\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\n//npm install @risingstack/react-easy-state\r\nimport { view } from '@risingstack/react-easy-state'\r\n \r\n\r\nclass DrinksTable extends Component {\r\n   \r\n    \r\n    render() {\r\n        let { ableData } = this.props;\r\n        console.log(ableData);\r\n        let { drinkData } = this.props;\r\n\r\n        const data = {\r\n            columns: this.getColumns(),\r\n            rows: this.getRows(drinkData, ableData)\r\n        }\r\n        return (\r\n            <\r\n                MDBDataTable\r\n                striped\r\n                bordered\r\n                hover\r\n                scrollX\r\n                responsive\r\n                fixed\r\n                entries={20} \r\n                maxHeight=\"50vh\"\r\n                searching={false}\r\n                data={data}\r\n            />          \r\n        )\r\n    }\r\n    \r\n    getColumns() {\r\n        const drinkTableColumns = [\r\n            { label: 'Drink ID', field: 'idDrink', sort: 'asc', width: 100 },\r\n            { label: 'Name', field: 'strDrink', sort: 'asc', width: 260},\r\n            { label: 'Category', field: 'strCategory', sort: 'asc', width: 180},\r\n            { label: 'Able To Make', field: 'strAble', sort: 'asc', width: 200},\r\n            { label: 'Alcoholic?', field: 'strAlcoholic', sort: 'asc', width: 150 },\r\n            { label: 'Glass Type', field: 'strGlass', sort: 'asc', width: 175},\r\n            { label: 'Details', field: 'detail', sort: 'asc' }        \r\n        ]\r\n        return drinkTableColumns\r\n    }\r\n\r\n    getRows(drinkData, ableData) {\r\n        if ( drinkData == null || typeof(drinkData) == 'undefined') {\r\n            return []\r\n        }\r\n     \r\n      \r\n     \r\n        return drinkData.map((object) => {\r\n           var strAble = \"False\";\r\n           if(ableData.includes(object)){\r\n            strAble = \"True\";\r\n           }\r\n            return {\r\n                \r\n                idDrink: object.idDrink,\r\n                strDrink: object.strDrink,\r\n                strCategory: object.strCategory,\r\n                strAble: strAble,\r\n                strAlcoholic: object.strAlcoholic,\r\n                strGlass: object.strGlass,\r\n                detail: <Link to={'/instructions/' + object.idDrink}><Button variant=\"outline-primary\" size=\"sm\">See Details</Button></Link>\r\n\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default view(DrinksTable)","import React, {Component} from \"react\"\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../styles/instructions.css'\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass Instructions extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            cocktail: {},\r\n            ingredients:[],\r\n            id:  this.props.match.params.id\r\n        }\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n       this.loadCocktail();\r\n        console.log(this.state.cocktail);\r\n    }\r\n\r\n    loadCocktail() {\r\n        this.setState({ loading: true })\r\n        fetch(`https://www.thecocktaildb.com/api/json/v2/9973533/lookup.php?i=${this.state.id}`)\r\n        .then(data => data.json())\r\n        .then(data => this.setState(\r\n            { cocktail: data.drinks[0],\r\n            ingredients:[\r\n                data.drinks[0].strIngredient1,\r\n                data.drinks[0].strIngredient2,\r\n                data.drinks[0].strIngredient3,        \r\n                data.drinks[0].strIngredient4,\r\n                data.drinks[0].strIngredient5,\r\n                data.drinks[0].strIngredient6,                     \r\n                data.drinks[0].strIngredient7,\r\n                data.drinks[0].strIngredient8,\r\n                data.drinks[0].strIngredient9,                     \r\n                data.drinks[0].strIngredient10,\r\n                data.drinks[0].strIngredient11,\r\n                data.drinks[0].strIngredient12,                     \r\n                data.drinks[0].strIngredient13,\r\n                data.drinks[0].strIngredient14,\r\n                data.drinks[0].strIngredient15        \r\n            ],\r\n            }\r\n        ))\r\n    }    \r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n                <div className=\"card bg-light\">\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col md-4\">\r\n                            <img className=\"card-img\" src={this.state.cocktail.strDrinkThumb}/>\r\n                        </div>\r\n                        <div className=\"col md-8\">\r\n                            <div className=\"card-body\">\r\n                                <h3 className=\"card-title\">{this.state.cocktail.strDrink}</h3>\r\n                                <h6 className=\"card-title\">{this.state.cocktail.strCategory}</h6>\r\n                                <ul style={{columns: '2'}}>\r\n                                    {this.state.ingredients.map((i, index) => {\r\n                                        if(i){\r\n                                            return <li key={index} className=\"text-left\">{i}</li>\r\n                                        }\r\n                                    })} \r\n                                </ul>\r\n                                <p>{this.state.cocktail.strInstructions}</p>\r\n                                <p className=\"card-text text-sm-center text-muted\">Last updated on {this.state.cocktail.dateModified}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n \r\n        );\r\n    }\r\n}\r\nexport default withRouter(Instructions)","import {extendObservable} from 'mobx'\r\n\r\n\r\nclass UserStore{\r\n    constructor(){\r\n        extendObservable(this,{\r\n            \r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n        })\r\n    }\r\n}\r\nexport default new UserStore();","import React from 'react';\r\nclass InputField extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"inputField\">input field\r\n                <input \r\n                className = \"input\"\r\n                type = {this.props.type}\r\n                placeholder = {this.props.placeholder}\r\n                value = {this.props.value}\r\n                onChange = { (e) => this.props.onChange (e.target.value)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default InputField;","import React from 'react';\r\nclass SubmitButton extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"submitbutton\">\r\n                <button\r\n                    className = \"btn\"\r\n                    disabled = {this.props.disabled}\r\n                    onClick  = { () => this.props.onClick()}>\r\n                        {this.props.text}\r\n\r\n                </button>\r\n            \r\n            \r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SubmitButton;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from '../stores/UserStore'\r\nclass LoginForm extends React.Component {\r\nconstructor(props){\r\n    super(props);\r\n    this.state = {\r\n        username: '',\r\n        password: '',\r\n        buttonDisabled: false\r\n    }\r\n}\r\nsetInputValue(property, val){\r\n    val = val.trim();\r\n    if(val.length > 12){\r\n        return;\r\n    }\r\n    this.setState({\r\n        [property]: val\r\n    })\r\n}\r\nresetForm(){\r\n    this.setState({\r\n        username: '',\r\n        password: '',\r\n        buttonDisabled: false\r\n\r\n    })\r\n}\r\nasync doLogin(){\r\n    if(!this.state.username){\r\n        return;\r\n    }\r\n    if(!this.state.password){\r\n        return;\r\n    }\r\n    this.setState({\r\n        buttonDisabled: true\r\n    })\r\n    try{\r\n        let res = await fetch('/login', {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            })\r\n       });\r\n       let result = await res.json();\r\n       if(result && result.success){\r\n           UserStore.isLoggedIn = true;\r\n           UserStore.username = result.username;\r\n\r\n       }\r\n       else if(result && result.success === false){\r\n           this.resetForm();\r\n           alert(result.msg);\r\n       }\r\n    }catch(e){\r\n        console.log(e);\r\n        this.resetForm();\r\n    }\r\n    \r\n}\r\n    render() {\r\n        return (\r\n            <div className = \"loginForm\">\r\n                Log in\r\n                <InputField\r\n                type ='text'\r\n                placeholder = 'Username'\r\n                value ={this.state.username ? this.state.username : ''}\r\n                onChange = { (val) => this.setInputValue('username', val)}/>\r\n\r\n\r\n                <InputField\r\n                type ='password'\r\n                placeholder = 'Password'\r\n                value ={this.state.password ? this.state.password : ''}\r\n                onChange = { (val) => this.setInputValue('password', val)}/>\r\n\r\n                <SubmitButton\r\n                text='Login'\r\n                disabled = {this.state.buttonDisabled}\r\n                onClick = {() => this.doLogin()}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LoginForm;","import logo from \"../logo.svg\"\r\nimport { Link } from 'react-router-dom'\r\nimport React, { Component } from \"react\"\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport DrinkTable from \"../components/drinktable\"\r\nimport DrinkTable2 from \"../components/drinktableV2\"\r\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\nimport '../styles/mybar.css'\r\nimport MyBarTable from \"../components/myBarTable\"\r\nimport NavBar from \"../components/navbar\"\r\nimport All from \"./all\"\r\nimport HomePage from './home'\r\n\r\nimport Instructions from \"./instructions\"\r\nimport UserStore from \"../stores/UserStore\"\r\nimport LoginForm from \"../components/LoginForm\"\r\nimport InputField from \"../components/InputField\"\r\nimport SubmitButton from \"../components/SubmitButton\"\r\nimport {observer} from 'mobx-react'\r\n\r\nconst INGREDIENT_PATH = \"https://www.thecocktaildb.com/api/json/v2/9973533/list.php?i=list\"\r\nconst ALL_PATH = \"https://www.thecocktaildb.com/api/json/v2/9973533/search.php?s=\"\r\n\r\n\r\n\r\nvar options = [\r\n \r\n];\r\n\r\n\r\nclass MyBar extends Component {\r\n    state = {\r\n      \r\n        drinks: {\r\n         \r\n        },\r\n        ableToMake:[\r\n\r\n        ],\r\n        ingredientList:[\r\n        ]\r\n \r\n\r\n      }\r\n    \r\n    async componentDidMount() {\r\n     this.loadDrinks();\r\n     this.getIngredients();\r\n        try{\r\n          let res = await fetch('/isLoggedIn', {\r\n            method: 'post',\r\n            header: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n    \r\n          let result = await res.json();\r\n    \r\n          if(result && result.success){\r\n            UserStore.loading = false;\r\n            UserStore.isLoggedIn = true;\r\n            UserStore.username = result.username;\r\n            \r\n          }\r\n          else{\r\n            UserStore.loading = false;\r\n            UserStore.isLoggedIn = false;\r\n          }\r\n    \r\n    \r\n        }\r\n        catch(e){\r\n          UserStore.loading =false;\r\n          UserStore.isLoggedIn = false;\r\n        }\r\n     \r\n      }\r\n    \r\n      \r\n    async doLogout() {\r\n    \r\n        try{\r\n          let res = await fetch('/logout', {\r\n            method: 'post',\r\n            header: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n    \r\n          let result = await res.json();\r\n    \r\n          if(result && result.success){\r\n            UserStore.isLoggedIn = false;\r\n            UserStore.username = '';\r\n          \r\n          }\r\n    \r\n    \r\n        }\r\n        catch(e){\r\n          console.log(e);\r\n        }\r\n    \r\n      }\r\n      state = {\r\n       ingredient: \"\",\r\n        drinkData: [\r\n          {\r\n            \"Id\": 1,\r\n            \"Name\": \"Product\",\r\n           \r\n         \r\n          }]\r\n        \r\n       \r\n      }\r\n      \r\n\r\n    loadDrinks(){\r\n   \r\n        fetch(ALL_PATH)\r\n          .then(data => data.json())\r\n          .then(data => {\r\n          \r\n            this.setState({drinks: data.drinks});\r\n            data.drinks.map((drink, i) => {\r\n              var ingredients = [\r\n                drink.strIngredient1,\r\n                drink.strIngredient2,\r\n                drink.strIngredient3,\r\n                drink.strIngredient4,\r\n                drink.strIngredient5,\r\n                drink.strIngredient6,\r\n                drink.strIngredient7,\r\n                drink.strIngredient8,\r\n                drink.strIngredient9,\r\n                drink.strIngredient10,\r\n                drink.strIngredient11,\r\n                drink.strIngredient12,\r\n                drink.strIngredient13,\r\n                drink.strIngredient14,\r\n                drink.strIngredient15,\r\n              ]\r\n              var filtered = ingredients.filter(function (el) {\r\n                return el != null;\r\n              });\r\n              this.state.ingredientList.push(filtered);\r\n           \r\n                        \r\n            });\r\n      \r\n\r\n              });\r\n           console.log(this.state.ingredientList);\r\n      \r\n      }\r\n   \r\n      getDrinksByIngredients= (event) =>{\r\n       \r\n        let userIngredients = event.map(a => a.value.toLowerCase());\r\n     \r\n       \r\n        var canMake =[];\r\n        \r\n        \r\n         this.state.ingredientList.map((ingredients, i) =>{ \r\n          var canAdd = true;\r\n         \r\n           \r\n          ingredients.map((item, x) =>{ \r\n                   \r\n              if(!userIngredients.includes(item.toLowerCase())){\r\n\r\n                  canAdd = false;           \r\n              }\r\n            }\r\n          \r\n          );\r\n         \r\n  \r\n          if(canAdd == true && !(this.state.ableToMake.includes(this.state.drinks[i]))){\r\n             \r\n              canMake.push(this.state.drinks[i]);\r\n             \r\n          }\r\n        });\r\n       \r\n         \r\n\r\n      if(canMake.length != 0 ){\r\n     \r\n      this.setState({\r\n        ableToMake: this.state.ableToMake.concat(canMake)})\r\n     \r\n      }\r\n    }\r\n      \r\n    getIngredients(){\r\n   \r\n      fetch(INGREDIENT_PATH)\r\n        .then(data => data.json())\r\n        .then(data => {\r\n           \r\n          data.drinks.map((ingredient, i) => {\r\n            options.push( { label: ingredient.strIngredient1, value: ingredient.strIngredient1})                          \r\n        });\r\n\r\n          this.setState({ingredient: data})\r\n        })\r\n         \r\n    }\r\n\r\n    render() {\r\n      if(UserStore.loading){\r\n        return(\r\n            <div className=\"App\">\r\n                <div className = 'container'>\r\n                  \r\n                  Loading, please wait...;\r\n                </div>\r\n            </div>\r\n      \r\n         ) }\r\n         else{\r\n          \r\n          if(UserStore.isLoggedIn){\r\n            \r\n            return ( \r\n              <div className = 'app'>\r\n                 <div className = 'container'>\r\n              \r\n              Welcome {UserStore.username}\r\n              <SubmitButton \r\n                text = {'Log out'} \r\n                disabled = {false} \r\n                onClick = { () => this.doLogout() }/>\r\n        \r\n                </div>\r\n              </div>\r\n            )\r\n          }else{\r\n            return (\r\n              <div className=\"App\">\r\n                    <div className = 'container'>\r\n                   \r\n                     <LoginForm/>\r\n                    </div>\r\n                </div>\r\n            )\r\n            \r\n          }\r\n         }\r\n       \r\n    /*\r\n      return(\r\n        \r\n         <div id=\"mybar_page\">\r\n \r\n  <h1 id=\"mybar_page_title\">Select which Ingredients you have at home!</h1>\r\n  <div class = \"selectbox\">\r\n  <ReactMultiSelectCheckboxes options={options} onChange ={this.getDrinksByIngredients}></ReactMultiSelectCheckboxes>\r\n  </div>\r\n  <br></br>\r\n  <MyBarTable drinkData = {this.state.drinks} ableData ={this.state.ableToMake}></MyBarTable>\r\n</div>\r\n)\r\n*/\r\n    }\r\n    \r\n}\r\n \r\nexport default observer(MyBar)","import React, { Component } from \"react\"\r\nimport { Switch, Route } from \"react-router-dom\"\r\n\r\nimport './App.css'\r\nimport NavBar from \"./components/navbar\"\r\nimport All from \"./pages/all\"\r\nimport HomePage from './pages/home'\r\nimport MyBar from \"./pages/mybar\"\r\nimport Instructions from \"./pages/instructions\"\r\nimport UserStore from \"./stores/UserStore\"\r\nimport LoginForm from \"./components/LoginForm\"\r\nimport InputField from \"./components/InputField\"\r\nimport SubmitButton from \"./components/SubmitButton\"\r\nimport {observer} from 'mobx-react'\r\nconst INGREDIENT_PATH = \"https://www.thecocktaildb.com/api/json/v2/9973533/list.php?i=list\"\r\nclass App extends React.Component{\r\n\r\n\r\n\r\n\r\n    render() {\r\n    \r\n        return (\r\n            <div className=\"App\">\r\n                <NavBar/>\r\n                <main>\r\n                    <Switch>\r\n                        <Route exact path='/' component={HomePage} />\r\n                        <Route path='/home' component={HomePage} />\r\n                        <Route path='/mybar' component={MyBar}  />\r\n                        <Route path='/all' component={All} />\r\n                        <Route path='/instructions/:id' component={Instructions} />\r\n                    </Switch>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n \r\nexport default observer(App)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nReactDOM.render((\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>\n ), document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}